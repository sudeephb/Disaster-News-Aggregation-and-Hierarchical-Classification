{"version":3,"sources":["images/logo.svg","contexts/NewsContext.js","components/NewsItem.js","components/NewsList.js","components/NewsSelector.js","components/NavBar.js","components/TabBarLabel1.js","components/TabBarLabel2.js","components/TabBarsContainer.js","components/Paginate.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","hierarchy","require","NewsContext","createContext","BASE_URL","NewsContextProvider","props","useState","newsList","setNewsList","labels","setLabels","label2_list","setLabel2List","allCheckboxChecked","setAllCheckBoxChecked","newsCount","setNewsCount","currentPage","setCurrentPage","activeTab2","setActiveTab2","requestArray","setRequestArray","fetchAndSetNewsList","request_array","a","page","setAllCheckbox","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","data","useEffect","root_key","curr_tree","i","length","key","push","to_set","map","leaf_label","label_name","is_selected","fetchLabels","Provider","value","children","NewsItem","summary","news","className","href","url","target","title_text","source_link","source_name","published_date_readable","substring","characters_to_show","replace","label","label3","label2","NewsList","useContext","v4","NewsSelector","allCheckBoxChecked","onSubmit","e","preventDefault","console","log","req_labels","toString","id","type","defaultChecked","onChange","isChecked","checked","labels_new","toggleAllBox","toggleCheckBox","Button","NavBar","Navbar","bg","variant","Brand","alt","src","Logo","width","height","TabBarLabel1","activeTab","setActiveTab","label1_list","onClickLabel1","leaf_labels","label1_node","toLowerCase","getLeafLabels_1","label2_children","Object","keys","getImmediateChildren_label1","label1_request","active_class","inactive_class","onClick","TabBarLabel2","onClickLabel2","label2_node","curr_child","temp_keys","j","getLeafLabels_2","label2_request","TabBarsContainer","PaginationComponent","totalPages","Math","ceil","Pagination","count","siblingCount","boundaryCount","shape","event","ContentArea","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31bde5cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d3428200.svg\";","import React, { createContext, useState, useEffect } from 'react';\nconst hierarchy = require('../hierarchy.json');\n\nexport const NewsContext = createContext();\n\nconst NEWS_PER_PAGE = 15\n\nconst BASE_URL = 'http://127.0.0.1:8000';\n\nconst NewsContextProvider = (props) => {\n    const [newsList, setNewsList] = useState([]);\n    const [labels, setLabels] = useState([]);\n    const [label2_list, setLabel2List] = useState([]);\n    const [allCheckboxChecked, setAllCheckBoxChecked] = useState(true);\n    const [newsCount, setNewsCount] = useState(5);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [activeTab2, setActiveTab2] = useState('');\n\n    \n    const [requestArray, setRequestArray] = useState([{\n        \"level\": \"label2\",\n        \"category\": \"all\"\n    }]);\n\n\n    function fetchLabels(){\n        var res = []\n            for (var root_key in hierarchy) {\n                var curr_tree = hierarchy[root_key];\n                // console.log(root_key)\n                for (var i = 0; i < curr_tree.length; i++) {\n                    for (var key in curr_tree[i]) {\n                        res.push(...curr_tree[i][key]);\n                    }\n                }\n            }\n\n        var to_set = [];\n        res.map(leaf_label => {\n            to_set.push({\n                label_name: leaf_label,\n                is_selected: true\n            });\n        });\n            setLabels(to_set);\n    }\n\n    useEffect(()=>{\n        // console.log('NewsContext provider useeffect called====----');\n        fetchLabels();\n        fetchAndSetNewsList(requestArray);\n    }, []);\n\n\n    async function fetchAndSetNewsList(request_array, page=1, setAllCheckbox = false){\n        const requestOptions = {\n            method: 'POST', \n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(request_array)\n        };\n        fetch(`${BASE_URL}/disaster/?page_no=${page}`, requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                // console.log('Data after post request ---- ', data);\n                setNewsList(data);\n            });\n        fetch(`${BASE_URL}/disaster/count/`, requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                setNewsCount(data);\n            })\n\n        setRequestArray(request_array);\n\n        if (page === 1)\n            setCurrentPage(1);\n\n        if (setAllCheckbox === true)\n            setAllCheckBoxChecked(true)\n    }\n    \n\n    return ( \n        <NewsContext.Provider value={{ newsList: newsList,\n                                        labels,\n                                        setLabels,\n                                        setNewsList,\n                                        label2_list, \n                                        setLabel2List, \n                                        allCheckboxChecked, \n                                        setAllCheckBoxChecked, \n                                        newsCount, \n                                        setNewsCount, \n                                        fetchAndSetNewsList,\n                                        requestArray,\n                                        setRequestArray,\n                                        currentPage,\n                                        setCurrentPage,\n                                        activeTab2,\n                                        setActiveTab2\n                                    }}>\n            {props.children}\n        </NewsContext.Provider>\n     );\n}\n \nexport default NewsContextProvider;","import React, { useEffect } from 'react';\n\nconst NewsItem = ({ news }) => {\n\n    const process_summary = (summary) => {\n        const characters_to_show = 165;\n        if (summary.length > characters_to_show) {\n            return (summary.substring(0, characters_to_show - 3) + '...').replace(/<\\/?[^>]+(>|$)/g, \"\");\n        }\n        else\n            return (summary.replace(/<\\/?[^>]+(>|$)/g, \"\"));\n    }\n\n    // console.log('Newwwwssss ===== ', news.title)\n\n    return (\n        <div className=\"flex bg-white shadow-lg rounded-lg mx-4 md:mx-auto my-3 max-w-md md:max-w-2xl \">\n            <div className=\"flex items-start px-4 py-6\">\n                <div className=\"\">\n                    <div className=\"flex items-center justify-between\">\n                        <h2 className=\"text-lg font-semibold text-blue-500 hover:text-blue-600 hover:underline cursor-pointer -mt-1\">\n                            <a href={news.url} target=\"_blank\">\n                                {news.title_text}\n                            </a>\n                        </h2>\n                    </div>\n                    <small><p className=\"text-gray-600\"> <a href={news.source_link} target=\"_blank\"> {`${(news.source_name)}`}</a>{` | ${news.published_date_readable}`} </p></small>\n                    <p className=\"mt-1 text-gray-700 text-sm\">\n                        {process_summary(news.summary) /* This removes html tags */}\n                    </p>\n\n                    <div className=\"mt-2 flex items-center\">\n                        <span className=\"badge badge-pill badge-primary label-individual\">{news.label !== \"null\" ? news.label : \"\"}</span>\n                        <span className=\"badge badge-pill badge-secondary label-individual\">{news.label3 !== \"null\" ? news.label3 : \"\"}</span>\n                        <span className=\"badge badge-pill badge-dark label-individual\">{news.label2 !== \"null\" ? news.label2 : \"\"}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"news-item\">\n            <div className=\"news-title\">\n                <a href={news.url} target=\"_blank\">\n\n                    {news.title_text}\n                </a>\n\n            </div>\n            <div className=\"news-date\">\n                {news.time}\n            </div>\n            <div className=\"news-labels-badge\">\n\n                <span className=\"badge badge-pill badge-success label-individual\">{news.label !== \"null\" ? news.label : \"\"}</span>\n                <span className=\"badge badge-pill badge-secondary label-individual\">{news.label3 !== \"null\" ? news.label3 : \"\"}</span>\n                <span className=\"badge badge-pill badge-dark label-individual\">{news.label2 !== \"null\" ? news.label2 : \"\"}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default NewsItem;","import React, { useContext, useEffect } from 'react';\nimport { NewsContext } from '../contexts/NewsContext';\nimport NewsItem from './NewsItem';\nimport { v4 } from 'uuid';\n// import InfiniteScroll from 'react-infinite-scroll-component';\n\n\nconst NewsList = () => {\n    const { newsList, fetchAndSetNewsList, labels, requestArray } = useContext(NewsContext);\n\n    // useEffect(() => {\n        // fetchAndSetNewsList(requestArray);\n    // });\n\n    return ( \n        <div className=\"flex news-list justify-center content-center\">\n            <ul>\n                {newsList.map(news => {\n                    return(<NewsItem news={news} key = {v4()} />)\n                })}\n            </ul>\n        </div>\n     );\n}\n \nexport default NewsList;","import React, { useContext, useEffect } from 'react';\nimport { NewsContext } from '../contexts/NewsContext';\nimport { v4 } from 'uuid';\nimport Button from 'react-bootstrap/Button';\n\nconst BASE_URL = 'http://127.0.0.1:8000';\n\nconst NewsSelector = () => {\n    const { labels, setLabels, setNewsList, allCheckBoxChecked, setAllCheckBoxChecked, fetchAndSetNewsList } = useContext(NewsContext);\n\n    async function fetchData() {\n        const res = await fetch(BASE_URL + '/disaster/');\n        res\n            .json()\n            .then(data => {\n                setNewsList(data);\n            })\n            .catch(err => console.log('Errorrr: ', err));\n    }\n\n\n    // useEffect(() => { // todo: make this to run in the beginning only ?------\n    //     fetchData();\n    // }, [labels]);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        console.log('Submitted ==== ');\n        console.log('Lables ==== ', labels);\n        setLabels(labels);\n        var req_labels = [...labels];\n        fetchAndSetNewsList(req_labels.map(label => {\n            return { label_name: label.label_name, is_selected: label.is_selected.toString() }\n        }));\n    }\n\n    const setLabels_helper = (labels) => {\n        // change labels array by reading each checkbox by id\n    }\n\n    const toggleCheckBox = (label) => {\n        // console.log('togglecheckbox called!', document.getElementById('label_earthquake').checked);\n        for (var i = 0; i < labels.length; i++) {\n            if (labels[i].label_name === label.label_name)\n                labels[i].is_selected = !labels[i].is_selected;\n            // labels[i].is_selected = checked;\n        }\n    }\n\n\n    const toggleAllBox = (e) => {\n        let isChecked = e.target.checked;\n        setAllCheckBoxChecked(isChecked);\n        // console.log('All box checked-> ', allCheckBoxChecked);\n        // console.log('From argument -> ', isChecked);\n        // console.log('Labels === ', labels);\n        let labels_new = [];\n        for (let i = 0; i < labels.length; i++) {\n            labels_new[i] = { \"label_name\": labels[i].label_name, \"is_selected\": isChecked }\n        }\n\n        setLabels(labels_new);\n    }\n\n    return (\n        <div className=\"news-selector flex text-black border border-gray-400\">\n            <div className=\"mt-8 ml-4\">\n                <form onSubmit={handleSubmit} id=\"newsSelectorForm\">\n                    <label className=\"mb-3\">\n                        <input\n                            className=\"mr-1\"\n\n                            id={'label_all'}\n                            type=\"checkbox\"\n                            defaultChecked={true}\n                            onChange={(e) => toggleAllBox(e)}\n                        />\n            Select all\n            </label>\n                    {labels.map(label => {\n                        return (\n                            <div key={v4()}>\n                                <label>\n                                    <input\n                                        className=\"mr-1\"\n                                        id={`label_${label.label_name}`}\n                                        type=\"checkbox\"\n                                        defaultChecked={label.is_selected}\n                                        onChange={() => {\n                                            toggleCheckBox(label)\n                                        }}\n                                    />\n                                    {label.label_name}\n                                </label>\n                            </div>\n                        );\n                    })}\n                    <Button type='submit' className=\"btn-primary\">Show</Button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default NewsSelector;\n\n\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport Logo from '../images/logo.svg'\n\nconst NavBar = () => {\n    return ( \n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    alt=\"\"\n                    src={Logo}\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                />{' '}\n      Disaster News\n    </Navbar.Brand>\n        </Navbar>\n     );\n}\n \nexport default NavBar;","import React, { useContext, useState } from 'react';\nimport { NewsContext } from '../contexts/NewsContext';\nimport { v4 } from 'uuid';\n\nconst hierarchy = require('../hierarchy.json');\nconst BASE_URL = 'http://127.0.0.1:8000';\n\n\n\n\nconst TabBarLabel1 = () => {\n  const { setLabels, labels, setLabel2List, setNewsList, newsList, fetchAndSetNewsList, setActiveTab2 } = useContext(NewsContext);\n  const [activeTab, setActiveTab] = useState('all');\n\n  const label1_list = ['all'];\n\n  for (var key in hierarchy) {\n    label1_list.push(key);\n  }\n\n\n\n  const getLeafLabels_1 = (label1_node) => {\n\n    var res = []\n\n    label1_node = label1_node.toLowerCase();\n\n    if (label1_node === 'all') {\n      for (var root_key in hierarchy) {\n        var curr_tree = hierarchy[root_key];\n        // console.log(root_key)\n        for (var i = 0; i < curr_tree.length; i++) {\n          for (var key in curr_tree[i]) {\n            res.push(...curr_tree[i][key]);\n          }\n        }\n      }\n      return res;\n    }\n\n    if (!hierarchy[label1_node]) {\n      return res;\n    }\n\n    curr_tree = hierarchy[label1_node];\n    for (var i = 0; i < curr_tree.length; i++) {\n      for (var key in curr_tree[i]) {\n        res.push(...curr_tree[i][key]);\n      }\n    }\n\n    return res;\n  }\n\n  const getImmediateChildren_label1 = (label) => {\n    // label is an array, each of the elements in an array is an object\n    var res = [];\n    if (hierarchy[label]) {\n      for (var i = 0; i < hierarchy[label].length; i++) {\n        res.push(...Object.keys(hierarchy[label][i]))\n      }\n    }\n    // console.log(`immediate children of ${label} are: `, res);\n    return res;\n  }\n\n  const onClickLabel1 = (label) => {\n    // console.log('On click called on', label);\n    var leaf_labels = getLeafLabels_1(label);\n    var label2_children = getImmediateChildren_label1(label);\n    setLabel2List(label2_children);\n\n    var to_set = [];\n    leaf_labels.map(leaf_label => {\n      to_set.push({\n        label_name: leaf_label,\n        is_selected: true\n      });\n    });\n\n    for (var i = 0; i < to_set.length; i++) {\n      to_set[i].label_name = (to_set[i].label_name).replace(' ', '_');\n    }\n    setLabels(to_set);\n\n\n    var label1_request = [{\n      \"level\": \"label2\",\n      \"category\": label.replace(\" \", \"_\")\n    }]\n\n    setActiveTab(label)\n    setActiveTab2('')\n    console.log('Active tab ========== ', activeTab);\n    fetchAndSetNewsList(label1_request, 1, true);\n\n\n  }\n\n\n\n  // const active_class = \"text-gray-600 py-2 px-6 block hover:text-blue-500 focus:outline-none text-blue-500 border-b-2 font-medium border-blue-500\";\n  // const inactive_class = \"text-gray-600 py-2 px-6 block hover:text-blue-500 focus:outline-none\";\n\n  const active_class = [\"-mb-px mr-1 cursor-pointer\", \"bg-white inline-block border-l border-t border-r rounded-t py-2 px-4\", \"text-blue-500 font-semibold underline\"];\n  const inactive_class = [\"mr-1 cursor-pointer hover:text-blue-500\", \"bg-silver inline-block py-2 px-4  hover:text-blue-500\", \"text-gray-500 font-semibold  hover:text-blue-500 hover:underline\"]\n\n  return (\n    <ul className=\"list-reset flex border-b\">\n      {label1_list.map(label => {\n        return (\n          <li key={v4()} className={label === activeTab ? active_class[0] : inactive_class[0]}>\n            <div className={label === activeTab ? active_class[1] : inactive_class[1]} onClick={() => { onClickLabel1(label); }}>\n              <span className={label === activeTab ? active_class[2] : inactive_class[2]}>\n                {label}\n              </span>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n\n  return (\n    <div className=\"bg-white\">\n      <nav className=\"flex flex-col sm:flex-row\">\n        {label1_list.map(label => {\n          return (\n            <button onClick={() => { onClickLabel1(label); }} key={v4()} className={label === activeTab ? active_class : inactive_class}>{label}</button>\n          );\n        })}\n      </nav>\n    </div>\n  );\n\n  // const active_class = \"nav-link active\";\n  // const inactive_class = \"nav-link\";\n\n  //   return ( \n  //     <div>\n  //       <ul className = \"nav nav-tabs\">\n  //         {label1_list.map(label => {\n  //           return(\n  //           <li onClick={()=>{onClickLabel1(label); fix_active_tab(label);}} key={v4()} className=\"nav-item\">\n  //               <div id={`nav-item-${label}`} style={{ color: \"black\", cursor: \"pointer\" }} className={label === activeTab ? active_class : inactive_class}>{label}</div>\n  //             </li>\n  //           );\n  //         }\n  //         )}\n  //       </ul>\n  //     </div>\n\n  // );\n\n}\n\nexport default TabBarLabel1;","import React, { useContext, useState } from 'react';\nimport { NewsContext } from '../contexts/NewsContext';\nimport { v4 } from 'uuid';\n\nconst hierarchy = require('../hierarchy.json');\nconst BASE_URL = 'http://127.0.0.1:8000';\n\n\nconst TabBarLabel2 = () => {\n    const { setLabels, label2_list, setNewsList, fetchAndSetNewsList, activeTab2, setActiveTab2 } = useContext(NewsContext);\n    // const [activeTab, setActiveTab] = useState(' ');\n\n    const getLeafLabels_2 = (label2_node) => {\n\n        var res = []\n        for (var key in hierarchy) {\n            var curr_child = hierarchy[key];\n            for (var i = 0; i < curr_child.length; i++) {\n                const temp_keys = Object.keys(curr_child[i]);\n                for (var j = 0; j < temp_keys.length; j++) {\n                    if (temp_keys[j] === label2_node) {\n                        res.push(...curr_child[i][temp_keys[j]]);\n                        // console.log('This has to be the cliced node: ', temp_keys[j], label2_node);\n                        // console.log(res);\n                    }\n                }\n            }\n        }\n\n\n        return res;\n    }\n\n\n    const onClickLabel2 = (label) => {\n        var leaf_labels = getLeafLabels_2(label);\n        var to_set = [];\n        // console.log('Leaf labels: ', leaf_labels);\n        leaf_labels.map(leaf_label => {\n            to_set.push({\n                label_name: leaf_label,\n                is_selected: true\n            });\n        });\n\n        for (var i = 0; i < to_set.length; i++) {\n            to_set[i].label_name = (to_set[i].label_name).replace(' ', '_');\n        }\n        setLabels(to_set);\n\n\n        var label2_request = [{\n            \"level\": \"label3\",\n            \"category\": label\n        }];\n\n        setActiveTab2(label)\n        fetchAndSetNewsList(label2_request, 1, true);\n\n\n    }\n\n\n\n    // const active_class = [\"-mb-px mr-1 cursor-pointer\", \"bg-white inline-block border-l border-t border-r rounded-t py-2 px-4\", \"text-blue-500 font-semibold underline\"];\n    // const inactive_class = [\"mr-1 cursor-pointer hover:text-blue-500\", \"bg-silver inline-block py-2 px-4  hover:text-blue-500\", \"text-gray-500 font-semibold  hover:text-blue-500 hover:underline\"]\n\n    // return (\n    //     <ul className=\"list-reset flex border-b\">\n    //         {label2_list.map(label => {\n    //             return (\n    //                 <li className={label === activeTab2 ? active_class[0] : inactive_class[0]}>\n    //                     <div className={label === activeTab2 ? active_class[1] : inactive_class[1]} onClick={() => { onClickLabel2(label); }}>\n    //                         <span className={label === activeTab2 ? active_class[2] : inactive_class[2]}>\n    //                             {label}\n    //                         </span>\n    //                     </div>\n    //                 </li>\n    //             );\n    //         })}\n    //     </ul>\n    // );\n\n\n\n\n\n    const active_class = \"text-gray-600 py-2 px-6 block hover:text-blue-500 focus:outline-none text-blue-500 border-b-2 font-medium border-blue-500\";\n    const inactive_class = \"text-gray-600 py-2 px-6 block hover:text-blue-500 focus:outline-none\";\n\n\n    return (\n        <div className=\"bg-white\">\n            <nav className=\"flex flex-col sm:flex-row\">\n                {label2_list.map(label => {\n                    return (\n                        <button onClick={() => { onClickLabel2(label); }} key={v4()} className={label === activeTab2 ? active_class : inactive_class}>{label}</button>\n                    );\n                })}\n            </nav>\n        </div>\n    );\n\n    // return (\n    //     // on hover, on click for each list element. include in a css file.\n    //     <div>\n    //         <ul className=\"nav nav-tabs\">\n    //             {label2_list.map(label => {\n    //                 return (\n    //                     <li onClick={() => { onClickLabel2(label) }} key={v4()} className=\"nav-item\">\n    //                         <div id={`nav-item-${label}`} style={{ color: \"black\", cursor: \"pointer\" }} className=\"nav-link nav-item-label2\">{label}</div>\n    //                     </li>\n    //                 );\n    //             }\n    //             )}\n    //         </ul>\n    //     </div>\n\n    // );\n}\n\nexport default TabBarLabel2;","import React from 'react';\nimport TabBarLabel1 from './TabBarLabel1';\nimport TabBarLabel2 from './TabBarLabel2';\n\nconst TabBarsContainer = () => {\n    return (\n        <div>\n            <TabBarLabel1 />\n            <TabBarLabel2 />\n        </div>\n    );\n}\n \nexport default TabBarsContainer;","import React, { useContext, useEffect } from 'react';\nimport { NewsContext } from '../contexts/NewsContext';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst NEWS_PER_PAGE = 15\n\nconst PaginationComponent = () => {\n    const { newsCount, requestArray, fetchAndSetNewsList, currentPage, setCurrentPage } = useContext(NewsContext);\n    let totalPages = newsCount > NEWS_PER_PAGE ? Math.ceil(newsCount / NEWS_PER_PAGE) : 1;\n\n    const handlePageChange = (event, value) => {\n        console.log(value);\n        setCurrentPage(value);\n        fetchAndSetNewsList(requestArray, value);\n    }\n\n    useEffect(() => {\n        // nothing here\n    }, [newsCount])\n\n    return (<div className=\"flex list-reset rounded w-auto font-sans justify-center mb-8 mt-4\">\n        <Pagination\n            // className=\"react-paginate\"\n            count={totalPages}\n            page={currentPage}\n            siblingCount={3}\n            boundaryCount={2}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            onChange={handlePageChange}\n        />\n        </div> );\n}\n \nexport default PaginationComponent;","//contains NewsList and Pagination components\nimport React from 'react';\nimport NewsList from './NewsList';\nimport PaginationComponent from './Paginate';\n\nconst ContentArea = () => {\n    return ( <div className=\"content-area mt-2 items-center\">\n                <NewsList />\n                <PaginationComponent />\n        </div> );\n}\n \nexport default ContentArea;","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport NewsContextProvider from './contexts/NewsContext';\nimport NewsList from './components/NewsList';\nimport NewsSelector from './components/NewsSelector';\nimport NavBar from './components/NavBar';\nimport TabBarLabel1 from './components/TabBarLabel1';\nimport TabBarsContainer from './components/TabBarsContainer';\nimport ContentArea from './components/ContentArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n          <NewsContextProvider>\n            <TabBarsContainer />\n\n            <div className=\"body-content\">\n              <NewsSelector />\n              <ContentArea />\n          <div className=\"null-component border border-gray-400\" />\n            </div>\n\n          </NewsContextProvider>\n        </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './tailwind.output.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}